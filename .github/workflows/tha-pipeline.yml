---
name: Tha Pipeline

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  VALIDATE_ALL_CODEBASE: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  APPLY_FIXES: all
  APPLY_FIXES_EVENT: pull_request
  APPLY_FIXES_MODE: pull_request
  FLAVOR_SUGGESTIONS: |
    ACTION_ACTIONLINT
    COPYPASTE_JSCPD
    CREDENTIALS_SECRETLINT
    CSS_STYLELINT
    CSS_SCSS_LINT
    EDITORCONFIG_EDITORCONFIG_CHECKER
    GIT_GIT_DIFF
    HTML_HTMLHINT
    JAVASCRIPT_ES
    JAVASCRIPT_STANDARD
    JSON_JSONLINT
    JSON_ESLINT_PLUGIN_JSONC
    JSON_V8R
    JSON_PRETTIER
    MARKDOWN_MARKDOWNLINT
    MARKDOWN_MARKDOWN_LINK_CHECK
    MARKDOWN_MARKDOWN_TABLE_FORMATTER
    PHP_BUILTIN
    PHP_PHPCS
    PHP_PHPSTAN
    PHP_PSALM
    SPELL_MISSPELL
    SPELL_CSPELL
    YAML_PRETTIER
    YAML_YAMLLINT
    YAML_V8R

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: MegaLinter
        id: ml
        uses: nvuillam/mega-linter@v4
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: MegaLinter reports
          path: megalinter-reports
      - name: Create Pull Request with fixes
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "[MegaLinter] Apply linters fixes"
          title: "[MegaLinter] Apply linters fixes"
          branch: main

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: "16"
      - name: Cache Yarn Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Build Project
        run: yarn build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Vercel Deployment
        run: vercel --prod
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
